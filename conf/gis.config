process {
    executor = 'sge'
    clusterOptions = { "-l mem_free=" + task.memory.toString().replaceAll(/[\sB]/, '') }
    penv = 'OpenMP'// task.cpus = automagically added
    maxRetries = 3
    errorStrategy = { task.attempt < 2 ? 'retry' : 'finish' }
    // translate container into conda environment name
    // `set -u` triggers `CONDA_PATH_BACKUP: unbound variable` on `source activate`
    beforeScript = { 'source /mnt/projects/rpd/rc/init.2017-04; module load miniconda3; set +u; source activate ' + params.container.replaceAll(/[\/:]/, '-') + "; set -u;" }
    time = '2h'
    memory = '1 GB'
    

/*
    /@ Process-specific resource requirements
    /@ FIXME unnecessary with env; once loaded
    $trim_and_combine {
        module = 'skewer/0.2.2:fastqc/0.11.4'
    }
    $decont {
        module = 'decont/0.5:fastqc/0.11.4'
    }
    $kraken {
        module = "kraken/1.0"
    }
    $tadpole {
        module = 'bbmap/37.17'
    }
    $gap_fill_assembly {
        module = 'simple-contig-joiner/91ab4d9'
    }
    $polish_assembly {
        module = 'polish-viral-ref/ffc6a02:seqtk/4feb6e8'
    }
    $final_mapping {
        module = "lofreq/2.1.3.1:bwa/0.7.15:samtools/1.3"
    }
    $var_calling {
        module = "lofreq/2.1.3.1:samtools/1.3"
    }
    $genomecov {
        module = "bedtools/2.25.0"
    }
    $vipr_tools {
        module = "miniconda3:vipr-tools/81b0782"
    }
*/
}
